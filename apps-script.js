/**
 * Google Apps Script –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞ IKEBER
 * –ü—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º–∞ —Å 3 –ø–æ–ª—è–º–∏
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  // ID Google —Ç–∞–±–ª–∏—Ü—ã
  SHEET_ID: '1nu7y3WvIs3CCwhV8CGgcly7d7ftevYvbPuZ_iMXyNHA',
  // –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –¥–ª—è –∑–∞—è–≤–æ–∫
  SHEET_NAME: '–ó–∞—è–≤–∫–∏',
  // Telegram Bot Token
  TELEGRAM_BOT_TOKEN: '8363402937:AAFwcvzjyYOprHzpVNycSuOKsLKo3-RfsUY',
  // Telegram Chat ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  TELEGRAM_CHAT_ID: '5809311119',
  // Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  NOTIFICATION_EMAIL: 'nasrurrunas@gmail.com'
};


/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –∏–∑ —Ñ–æ—Ä–º—ã
 */
function doPost(e) {
  try {
    const data = e.parameter;
    
    if (!validateLeadData(data)) {
      return createResponse(400, { error: '–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–ª–∏ –∏—Ö —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–µ–Ω' });
    }
    
    const leadId = saveToGoogleSheets(data);
    sendNotifications(data, leadId);
    
    return HtmlService.createHtmlOutput(`
      <!DOCTYPE html>
      <html>
        <head>
          <title>–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</title>
          <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background-color: #f4f4f4; }
            .container { background-color: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: inline-block; }
            .success { color: #28a745; font-size: 24px; font-weight: bold; }
            p { color: #333; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="success">‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</div>
            <p>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
          </div>
          <script>
            setTimeout(() => { window.close(); }, 3000);
          </script>
        </body>
      </html>
    `);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏:', error.stack);
    return createResponse(500, { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è GET –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function doGet(e) {
  return createResponse(200, {
    message: '–°–µ—Ä–≤–∏—Å –∑–∞—è–≤–æ–∫ IKEBER —Ä–∞–±–æ—Ç–∞–µ—Ç',
    timestamp: new Date().toISOString()
  });
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏
 */
function validateLeadData(data) {
  const requiredFields = ['name', 'phone'];
  
  for (const field of requiredFields) {
    if (!data[field] || data[field].trim() === '') return false;
  }
  
  const phoneRegex = /^[\d\s\-\+\(\)]{7,}$/;
  if (!phoneRegex.test(data.phone)) return false;
  
  return true;
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤ Google Sheets
 */
function saveToGoogleSheets(data) {
  try {
    const spreadsheet = SpreadsheetApp.openById(CONFIG.SHEET_ID);
    let sheet = spreadsheet.getSheetByName(CONFIG.SHEET_NAME);
    
    if (!sheet) {
      sheet = spreadsheet.insertSheet(CONFIG.SHEET_NAME);
      const headers = ['ID', '–î–∞—Ç–∞', '–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω', 'Telegram', '–¢–∞—Ä–∏—Ñ', '–ò—Å—Ç–æ—á–Ω–∏–∫', 'IP –∞–¥—Ä–µ—Å', '–°—Ç–∞—Ç—É—Å'];
      sheet.getRange(1, 1, 1, headers.length).setValues([headers]).setFontWeight('bold');
      sheet.setFrozenRows(1);
    }
    
    const leadId = 'IKEBER-' + Utilities.getUuid().substring(0, 8).toUpperCase();
    
    const rowData = [
      leadId, new Date(), data.name, data.phone, data.telegram || '',
      data.tariff || '–ù–µ —É–∫–∞–∑–∞–Ω', data.source || '–°–∞–π—Ç', data.ipAddress || '', '–ù–æ–≤–∞—è'
    ];
    
    sheet.appendRow(rowData);
    return leadId;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Google Sheets:', error.stack);
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É');
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
 */
function sendNotifications(data, leadId) {
  try {
    console.log('–ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∑–∞—è–≤–∫–∏:', leadId);
    
    const hasTelegramConfig = CONFIG.TELEGRAM_BOT_TOKEN && CONFIG.TELEGRAM_BOT_TOKEN !== 'YOUR_TELEGRAM_BOT_TOKEN' &&
                             CONFIG.TELEGRAM_CHAT_ID && CONFIG.TELEGRAM_CHAT_ID !== 'YOUR_TELEGRAM_CHAT_ID';
    
    if (hasTelegramConfig) {
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
      sendTelegramNotification(data, leadId);
    } else {
      console.log('Telegram –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Telegram.');
    }
    
    if (CONFIG.NOTIFICATION_EMAIL) {
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
      sendEmailNotification(data, leadId);
    } else {
      console.log('Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É.');
    }
    
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error.stack);
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
 */
function sendTelegramNotification(data, leadId) {
  try {
    const message = `üì• <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ IKEBER</b> (${leadId})\n\n` +
                    `üë§ <b>–ò–º—è:</b> ${data.name}\n` +
                    `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>${data.phone}</code>\n` +
                    `üì± <b>Telegram:</b> ${data.telegram || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                    `üíº <b>–¢–∞—Ä–∏—Ñ:</b> ${data.tariff || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n` +
                    `üïí <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}`;

    const payload = {
      'chat_id': String(CONFIG.TELEGRAM_CHAT_ID),
      'text': message,
      'parse_mode': 'HTML'
    };
    
    const options = {
      'method': 'post',
      'contentType': 'application/json',
      'payload': JSON.stringify(payload),
      'muteHttpExceptions': true
    };
    
    const url = `https://api.telegram.org/bot${CONFIG.TELEGRAM_BOT_TOKEN}/sendMessage`;
    const response = UrlFetchApp.fetch(url, options);
    
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    if (responseCode === 200) {
      console.log('Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.');
    } else {
      console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram. –ö–æ–¥: ${responseCode}, –û—Ç–≤–µ—Ç: ${responseText}`);
    }
    
  } catch (error) {
    console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error.stack);
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function sendEmailNotification(data, leadId) {
  try {
    const subject = `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ IKEBER - ${leadId}`;
    const htmlBody = `
      <h3>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ IKEBER</h3>
      <p><b>ID –∑–∞—è–≤–∫–∏:</b> ${leadId}</p>
      <p><b>–ò–º—è:</b> ${data.name}</p>
      <p><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${data.phone}</p>
      <p><b>Telegram:</b> ${data.telegram || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
      <p><b>–¢–∞—Ä–∏—Ñ:</b> ${data.tariff || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
      <hr>
      <p><b>–í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è:</b> ${new Date().toLocaleString('ru-RU')}</p>
      <p>
        <a href="https://docs.google.com/spreadsheets/d/${CONFIG.SHEET_ID}">
          –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–∞–±–ª–∏—Ü–µ —Å –∑–∞—è–≤–∫–∞–º–∏
        </a>
      </p>
    `;
    
    MailApp.sendEmail({
      to: CONFIG.NOTIFICATION_EMAIL,
      subject: subject,
      htmlBody: htmlBody
    });
    console.log('Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞:', CONFIG.NOTIFICATION_EMAIL);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error.stack);
  }
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ HTTP –æ—Ç–≤–µ—Ç–∞
 */
function createResponse(statusCode, data) {
  const output = ContentService.createTextOutput(JSON.stringify(data));
  output.setMimeType(ContentService.MimeType.JSON);
  // statusCode –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥–æ–º ContentService, –æ–Ω —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–µ—è–≤–Ω–æ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∏–∑ doPost/doGet.
  // –î–ª—è —è–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HtmlOutput, –Ω–æ –¥–ª—è JSON —ç—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
  return output;
}


// =================================================================
// –¢–ï–°–¢–û–í–´–ï –§–£–ù–ö–¶–ò–ò
// =================================================================

/**
 * –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –í–°–ï–• —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (Telegram + Email)
 * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É.
 */
function testAllNotifications() {
  console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===');

  // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–∞–∫ –±—É–¥—Ç–æ –ø—Ä–∏—à–ª–∞ –∑–∞—è–≤–∫–∞
  const testData = {
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç (Email+TG)',
    phone: '+7 (000) 000-00-00',
    telegram: '@testuser',
    tariff: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç'
  };

  // 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID
  const leadId = 'TEST-ALL-' + new Date().getTime();

  // 3. –í—ã–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  console.log('–í—ã–∑–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ sendNotifications...');
  sendNotifications(testData, leadId);

  console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
  console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à Telegram —á–∞—Ç –∏ –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫ ' + CONFIG.NOTIFICATION_EMAIL);
}


/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
function testTelegramNotification() {
  console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢–û–õ–¨–ö–û TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===');
  const testData = {
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å TG',
    phone: '+7 (999) 999-99-99',
    telegram: '@testuser',
    tariff: '–¢–µ—Å—Ç–æ–≤—ã–π TG'
  };
  const leadId = 'TEST-TG-' + Utilities.getUuid().substring(0, 8).toUpperCase();
  sendTelegramNotification(testData, leadId);
}

/**
 * –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç: –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É + –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function testFullLeadProcessing() {
  console.log('=== –ü–û–õ–ù–´–ô –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –ó–ê–Ø–í–ö–ò ===');
  const testData = {
    name: '–ü–æ–ª–Ω—ã–π –¢–µ—Å—Ç –ö–ª–∏–µ–Ω—Ç',
    phone: '+7 (999) 888-77-66',
    telegram: '@fulltest',
    tariff: '–ù–∞—á–∞–ª—å–Ω—ã–π',
    source: '–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç'
  };
  
  try {
    const leadId = saveToGoogleSheets(testData);
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å ID:', leadId);
    sendNotifications(testData, leadId);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏:', error);
  }
}