/**
 * Google Apps Script –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞ IKEBER
 * –ü—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º–∞ —Å 3 –ø–æ–ª—è–º–∏
 * 
 * –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
 * 1. –í —Ñ—É–Ω–∫—Ü–∏–∏ sendTelegramNotification –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram API (–¥–æ–±–∞–≤–ª–µ–Ω contentType: 'application/json' –∏ JSON.stringify).
 * 2. –†–µ–∂–∏–º —Ä–∞–∑–º–µ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω —Å Markdown –Ω–∞ HTML –¥–ª—è –±–æ–ª—å—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏.
 * 3. –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ sendTelegramNotification.
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  // ID Google —Ç–∞–±–ª–∏—Ü—ã (–∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID)
  SHEET_ID: '1nu7y3WvIs3CCwhV8CGgcly7d7ftevYvbPuZ_iMXyNHA',
  // –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –¥–ª—è –∑–∞—è–≤–æ–∫
  SHEET_NAME: '–ó–∞—è–≤–∫–∏',
  // Telegram Bot Token (–∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω)
  TELEGRAM_BOT_TOKEN: '8363402937:AAFwcvzjyYOprHzpVNycSuOKsLKo3-RfsUY',
  // Telegram Chat ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID)
  TELEGRAM_CHAT_ID: '5809311119',
  // Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  NOTIFICATION_EMAIL: 'nasrurrunas@gmail.com'
};


/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –∏–∑ —Ñ–æ—Ä–º—ã
 */
function doPost(e) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã (application/x-www-form-urlencoded)
    const data = e.parameter;
    
    if (!validateLeadData(data)) {
      return createResponse(400, { error: '–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–ª–∏ –∏—Ö —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–µ–Ω' });
    }
    
    const leadId = saveToGoogleSheets(data);
    sendNotifications(data, leadId);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± —É—Å–ø–µ—Ö–µ
    return HtmlService.createHtmlOutput(`
      <!DOCTYPE html>
      <html>
        <head>
          <title>–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</title>
          <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background-color: #f4f4f4; }
            .container { background-color: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: inline-block; }
            .success { color: #28a745; font-size: 24px; font-weight: bold; }
            p { color: #333; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="success">‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</div>
            <p>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
          </div>
          <script>
            setTimeout(() => { window.close(); }, 3000);
          </script>
        </body>
      </html>
    `);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏:', error);
    Logger.log('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞: ' + error.stack);
    return createResponse(500, { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è GET –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function doGet(e) {
  return createResponse(200, {
    message: '–°–µ—Ä–≤–∏—Å –∑–∞—è–≤–æ–∫ IKEBER —Ä–∞–±–æ—Ç–∞–µ—Ç',
    timestamp: new Date().toISOString()
  });
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏
 */
function validateLeadData(data) {
  const requiredFields = ['name', 'phone', 'email'];
  
  for (const field of requiredFields) {
    if (!data[field] || data[field].trim() === '') {
      return false;
    }
  }
  
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(data.email)) {
    return false;
  }
  
  const phoneRegex = /^[\d\s\-\+\(\)]{7,}$/; // –°–¥–µ–ª–∞–ª –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–º, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
  if (!phoneRegex.test(data.phone)) {
    return false;
  }
  
  return true;
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤ Google Sheets
 */
function saveToGoogleSheets(data) {
  try {
    const spreadsheet = SpreadsheetApp.openById(CONFIG.SHEET_ID);
    let sheet = spreadsheet.getSheetByName(CONFIG.SHEET_NAME);
    
    if (!sheet) {
      sheet = spreadsheet.insertSheet(CONFIG.SHEET_NAME);
      const headers = ['ID', '–î–∞—Ç–∞', '–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω', 'Email', '–¢–∞—Ä–∏—Ñ', '–ò—Å—Ç–æ—á–Ω–∏–∫', 'IP –∞–¥—Ä–µ—Å', '–°—Ç–∞—Ç—É—Å'];
      sheet.getRange(1, 1, 1, headers.length).setValues([headers]).setFontWeight('bold');
      sheet.setFrozenRows(1);
    }
    
    const leadId = 'IKEBER-' + Utilities.getUuid().substring(0, 8).toUpperCase();
    
    const rowData = [
      leadId,
      new Date(),
      data.name,
      data.phone,
      data.email,
      data.tariff || '–ù–µ —É–∫–∞–∑–∞–Ω',
      data.source || '–°–∞–π—Ç',
      data.ipAddress || '',
      '–ù–æ–≤–∞—è'
    ];
    
    sheet.appendRow(rowData);
    return leadId;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Google Sheets:', error);
    Logger.log('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.stack);
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É');
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
function sendNotifications(data, leadId) {
  try {
    console.log('–ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∑–∞—è–≤–∫–∏:', leadId);
    
    const hasTelegramConfig = CONFIG.TELEGRAM_BOT_TOKEN && CONFIG.TELEGRAM_BOT_TOKEN !== 'YOUR_TELEGRAM_BOT_TOKEN' &&
                             CONFIG.TELEGRAM_CHAT_ID && CONFIG.TELEGRAM_CHAT_ID !== 'YOUR_TELEGRAM_CHAT_ID';
    
    if (hasTelegramConfig) {
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
      sendTelegramNotification(data, leadId);
    } else {
      console.log('Telegram –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Telegram.');
    }
    
    if (CONFIG.NOTIFICATION_EMAIL) {
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
      sendEmailNotification(data, leadId);
    }
    
    console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
    Logger.log('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ' + error.stack);
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
 */
function sendTelegramNotification(data, leadId) {
  try {
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram...');
    
    const message = `üì• <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ IKEBER</b> (${leadId})\n\n` +
                    `üë§ <b>–ò–º—è:</b> ${data.name}\n` +
                    `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>${data.phone}</code>\n` +
                    `üìß <b>Email:</b> ${data.email}\n` +
                    `üíº <b>–¢–∞—Ä–∏—Ñ:</b> ${data.tariff || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n` +
                    `üïí <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}`;

    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', message);
    
    const payload = {
      'chat_id': String(CONFIG.TELEGRAM_CHAT_ID), // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞
      'text': message,
      'parse_mode': 'HTML'
    };
    
    const options = {
      'method': 'post',
      'contentType': 'application/json',
      'payload': JSON.stringify(payload),
      'muteHttpExceptions': true
    };
    
    const url = `https://api.telegram.org/bot${CONFIG.TELEGRAM_BOT_TOKEN}/sendMessage`;
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ URL:', url);
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`–û—Ç–≤–µ—Ç –æ—Ç Telegram API. –ö–æ–¥: ${responseCode}`);
    console.log(`–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: ${responseText}`);
    
    if (responseCode !== 200) {
      throw new Error(`Telegram API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${responseCode} - ${responseText}`);
    }
    
    console.log('Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    // –ù–µ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function sendEmailNotification(data, leadId) {
  try {
    const subject = `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ IKEBER - ${leadId}`;
    const body = `
      –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ IKEBER:

      ID –∑–∞—è–≤–∫–∏: ${leadId}
      –ò–º—è: ${data.name}
      –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
      Email: ${data.email}
      –¢–∞—Ä–∏—Ñ: ${data.tariff || '–ù–µ —É–∫–∞–∑–∞–Ω'}

      –í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}

      –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É —Å –∑–∞—è–≤–∫–∞–º–∏: https://docs.google.com/spreadsheets/d/${CONFIG.SHEET_ID}
    `;
    
    MailApp.sendEmail(CONFIG.NOTIFICATION_EMAIL, subject, body);
    console.log('Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞:', CONFIG.NOTIFICATION_EMAIL);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
  }
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ HTTP –æ—Ç–≤–µ—Ç–∞
 */
function createResponse(statusCode, data) {
  return ContentService
    .createTextOutput(JSON.stringify(data))
    .setMimeType(ContentService.MimeType.JSON);
    // setStatusCode is not a function of TextOutput, this is handled by the server response itself.
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
// –ü—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç–µ testTelegramNotification() –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É.

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function testLeadProcessing() {
  const testData = {
    name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
    phone: '+7 (999) 123-45-67',
    email: 'test@example.com',
    tariff: '–ù–∞—á–∞–ª—å–Ω—ã–π'
  };
  
  const result = saveToGoogleSheets(testData);
  console.log('–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å ID:', result);
}

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
function testTelegramNotification() {
  console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===');
  
  const hasTelegramConfig = CONFIG.TELEGRAM_BOT_TOKEN && CONFIG.TELEGRAM_BOT_TOKEN !== 'YOUR_TELEGRAM_BOT_TOKEN' &&
                           CONFIG.TELEGRAM_CHAT_ID && CONFIG.TELEGRAM_CHAT_ID !== 'YOUR_TELEGRAM_CHAT_ID';
  
  if (!hasTelegramConfig) {
    console.error('‚ùå Telegram –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!');
    console.log('TELEGRAM_BOT_TOKEN:', CONFIG.TELEGRAM_BOT_TOKEN);
    console.log('TELEGRAM_CHAT_ID:', CONFIG.TELEGRAM_CHAT_ID);
    return;
  }
  
  console.log('‚úÖ Telegram –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
  
  const testData = {
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    phone: '+7 (999) 999-99-99',
    email: 'test@ikeber.ru',
    tariff: '–¢–µ—Å—Ç–æ–≤—ã–π'
  };
  
  const leadId = 'TEST-' + Utilities.getUuid().substring(0, 8).toUpperCase();
  
  sendTelegramNotification(testData, leadId);
}

/**
 * –ü–æ–ª–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞
 */
function testFullLeadProcessing() {
  console.log('=== –ü–û–õ–ù–´–ô –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –ó–ê–Ø–í–ö–ò ===');
  
  const testData = {
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
    phone: '+7 (999) 888-77-66',
    email: 'client@test.ru',
    tariff: '–ù–∞—á–∞–ª—å–Ω—ã–π',
    source: '–¢–µ—Å—Ç'
  };
  
  try {
    console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏...');
    const leadId = saveToGoogleSheets(testData);
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å ID:', leadId);
    
    sendNotifications(testData, leadId);
    console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏:', error);
  }
}