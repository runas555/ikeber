/**
 * Google Apps Script –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞ IKEBER
 * –ü—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º–∞ —Å 3 –ø–æ–ª—è–º–∏
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  // ID Google —Ç–∞–±–ª–∏—Ü—ã (–∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID)
  SHEET_ID: '1nu7y3WvIs3CCwhV8CGgcly7d7ftevYvbPuZ_iMXyNHA',
  // –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –¥–ª—è –∑–∞—è–≤–æ–∫
  SHEET_NAME: '–ó–∞—è–≤–∫–∏',
  // Telegram Bot Token (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  TELEGRAM_BOT_TOKEN: 'YOUR_TELEGRAM_BOT_TOKEN',
  // Telegram Chat ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  TELEGRAM_CHAT_ID: 'YOUR_TELEGRAM_CHAT_ID',
  // Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  NOTIFICATION_EMAIL: 'nasrurrunas@gmail.com'
};


/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –∏–∑ —Ñ–æ—Ä–º—ã
 */
function doPost(e) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã (application/x-www-form-urlencoded)
    const data = e.parameter;
    
    if (!validateLeadData(data)) {
      return createResponse(400, { error: '–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã' });
    }
    
    const leadId = saveToGoogleSheets(data);
    sendNotifications(data, leadId);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± —É—Å–ø–µ—Ö–µ
    return HtmlService.createHtmlOutput(`
      <!DOCTYPE html>
      <html>
        <head>
          <title>–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</title>
          <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
            .success { color: green; font-size: 24px; }
          </style>
        </head>
        <body>
          <div class="success">‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</div>
          <p>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</p>
          <script>
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
              window.close();
            }, 2000);
          </script>
        </body>
      </html>
    `);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏:', error);
    return createResponse(500, { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è GET –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function doGet(e) {
  return createResponse(200, {
    message: '–°–µ—Ä–≤–∏—Å –∑–∞—è–≤–æ–∫ IKEBER —Ä–∞–±–æ—Ç–∞–µ—Ç',
    timestamp: new Date().toISOString()
  });
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏
 */
function validateLeadData(data) {
  const requiredFields = ['name', 'phone', 'email'];
  
  for (const field of requiredFields) {
    if (!data[field] || data[field].trim() === '') {
      return false;
    }
  }
  
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(data.email)) {
    return false;
  }
  
  const phoneRegex = /^[\d\s\-\+\(\)]{10,}$/;
  if (!phoneRegex.test(data.phone.replace(/\D/g, ''))) {
    return false;
  }
  
  return true;
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤ Google Sheets
 */
function saveToGoogleSheets(data) {
  try {
    const spreadsheet = SpreadsheetApp.openById(CONFIG.SHEET_ID);
    let sheet = spreadsheet.getSheetByName(CONFIG.SHEET_NAME);
    
    if (!sheet) {
      sheet = spreadsheet.insertSheet(CONFIG.SHEET_NAME);
      const headers = ['ID', '–î–∞—Ç–∞', '–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω', 'Email', '–¢–∞—Ä–∏—Ñ', '–ò—Å—Ç–æ—á–Ω–∏–∫', 'IP –∞–¥—Ä–µ—Å', '–°—Ç–∞—Ç—É—Å'];
      sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
    }
    
    const leadId = 'IKEBER-' + Utilities.getUuid().substring(0, 8).toUpperCase();
    
    const rowData = [
      leadId,
      new Date(),
      data.name,
      data.phone,
      data.email,
      data.tariff || '–ù–∞—á–∞–ª—å–Ω—ã–π',
      data.source || '–°–∞–π—Ç',
      data.ipAddress || '',
      '–ù–æ–≤–∞—è'
    ];
    
    sheet.appendRow(rowData);
    return leadId;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Google Sheets:', error);
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É');
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
function sendNotifications(data, leadId) {
  try {
    if (CONFIG.TELEGRAM_BOT_TOKEN && CONFIG.TELEGRAM_CHAT_ID) {
      sendTelegramNotification(data, leadId);
    }
    
    if (CONFIG.NOTIFICATION_EMAIL) {
      sendEmailNotification(data, leadId);
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
 */
function sendTelegramNotification(data, leadId) {
  const message = `üì• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ IKEBER* (${leadId})

üë§ *–ò–º—è:* ${data.name}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* \`${data.phone}\`
üìß *Email:* ${data.email}
üíº *–¢–∞—Ä–∏—Ñ:* ${data.tariff}

üïí *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU')}`;

  const payload = {
    chat_id: CONFIG.TELEGRAM_CHAT_ID,
    text: message,
    parse_mode: 'Markdown'
  };
  
  const options = {
    method: 'POST',
    payload: payload
  };
  
  UrlFetchApp.fetch(
    `https://api.telegram.org/bot${CONFIG.TELEGRAM_BOT_TOKEN}/sendMessage`,
    options
  );
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function sendEmailNotification(data, leadId) {
  const subject = `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ IKEBER - ${leadId}`;
  const body = `
–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ IKEBER:

ID –∑–∞—è–≤–∫–∏: ${leadId}
–ò–º—è: ${data.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
Email: ${data.email}
–¢–∞—Ä–∏—Ñ: ${data.tariff}

–í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}

–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É —Å –∑–∞—è–≤–∫–∞–º–∏: https://docs.google.com/spreadsheets/d/${CONFIG.SHEET_ID}
  `;
  
  MailApp.sendEmail(CONFIG.NOTIFICATION_EMAIL, subject, body);
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ HTTP –æ—Ç–≤–µ—Ç–∞
 */
function createResponse(statusCode, data) {
  return ContentService
    .createTextOutput(JSON.stringify(data))
    .setMimeType(ContentService.MimeType.JSON)
    .setStatusCode(statusCode);
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function testLeadProcessing() {
  const testData = {
    name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
    phone: '+7 (999) 123-45-67',
    email: 'test@example.com',
    tariff: '–ù–∞—á–∞–ª—å–Ω—ã–π'
  };
  
  const result = saveToGoogleSheets(testData);
  console.log('–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å ID:', result);
}